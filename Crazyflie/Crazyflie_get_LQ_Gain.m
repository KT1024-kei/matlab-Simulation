%% State Spaec Param

g = 9.8;
m = 0.028;
% 
stateA = [0  0  0  1  0  0  0  0  0  0  0  0;
          0  0  0  0  1  0  0  0  0  0  0  0;
          0  0  0  0  0  1  0  0  0  0  0  0;
          0  0  0  0  0  0  0  g  0  0  0  0;
          0  0  0  0  0  0 -g  0  0  0  0  0;
          0  0  0  0  0  0  0  0  0  0  0  0;
          0  0  0  0  0  0  0  0  0  1  0  0;
          0  0  0  0  0  0  0  0  0  0  1  0;
          0  0  0  0  0  0  0  0  0  0  0  1;
          0  0  0  0  0  0  0  0  0  0  0  0;
          0  0  0  0  0  0  0  0  0  0  0  0;
          0  0  0  0  0  0  0  0  0  0  0  0];
%         X  Y  Z Xd Yd Zd  R  P  Y Wx Wy Wz
I = [16.571710 0.830806 0.718277;
     0.830806 16.655602 1.800197;
     0.718277 1.800197 29.261652] * 10^(-6);
% I = [1 0 0;
%      0 1 0;
%      0 0 1] * 10^(-6);
Jxx = I(1, 1);
Jyy = I(2, 2);
Jzz = I(3, 3);
% 可制御
stateB = [0   0      0     0;
          0   0      0     0;
          0   0      0     0;
          0   0      0     0;
          0   0      0     0;
          1/m 0      0     0;
          0   0      0     0;
          0   0      0     0;
          0   0      0     0;
          0   1/Jxx  0     0;
          0   0      1/Jyy 0;
          0   0      0     1/Jzz];
% 可観測
 stateC = eye(12);
 % 直達項なし
 stateD = zeros(12, 4);
      
% 最適レギュレータ
Q = eye(12);       % 重み行列
Q(7, 7) = 10; Q(8, 8) = 10; Q(9, 9) = 1;
Q(10, 10) = 100; Q(11, 11) = 100; Q(12, 12) = 1;
R = eye(4);         
N = zeros(12, 4);
% ゲインを計算
LQRK = lqr(stateA, stateB, Q, R, N);

%% 安定性解析
% 状態空間モデル LQR最適化で得られたゲインの閉ループ系の安定性解析．
sys = ss(stateA, stateB, stateC, stateD);
sysfeedback = feedback(sys, LQRK);
% 実部が負であれば安定している，
P = pole(sysfeedback)

%% 状態方程式から伝達関数に変換
s = tf('s');
P = stateC * inv(s*eye(12) - stateA) * stateB % 線形化したドローンモデルの伝達関数

%% LQR最適化で求めたフィードバック系での伝達関数行列Gを求める

% r : 参照値  [12, 12]
% d : 入力直前に加わる外乱 [4, 1]
% u : プラントPへの入力  [4, 1]

% Up: プラントPへの入力　＋　外乱  [4, 1]
% e : 参照値との偏差  [12, 12]
% y: eと同様 [12, 12]

% 伝達関数Gは
G = [ eye(4), zeros(4, 12), eye(4);
      -P     , eye(12)      , -P;
      -P     , eye(12)      , -P];
  
% 定理4－4を満たす安定化制御器Kが存在する．

% Q を I + (-P)Q(inf)が正則となるように選ぶと，
% K = Q(I + G_22Q)^-1　は安定化制御器である．

Q = ones(4, 12);
K = Q * inv(eye(12) + P * Q);